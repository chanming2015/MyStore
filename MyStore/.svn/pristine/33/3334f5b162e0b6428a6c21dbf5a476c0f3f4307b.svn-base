/*
 *www.dyr.com
 *Copyright (c) 2014 All Rights Reserved
 */
/**
 * Author XuMaoSen
 */
package com.dyr.web;

import java.io.IOException;
import java.util.List;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import com.dyr.dao.service.CategoryService;
import com.dyr.dao.service.GoodsService;
import com.dyr.dao.service.ImageGoodsService;
import com.dyr.dao.service.StockService;
import com.dyr.entity.Category;
import com.dyr.entity.Goods;
import com.dyr.entity.ImageGoods;
import com.dyr.entity.PageBean;
import com.dyr.entity.Stock;

/**
 * Project:MyStore
 * Package:com.dyr.web
 * FileName:ShowGoodsListServlet.java
 * Comments:
 * JDK Version:
 * Author XuMaoSen
 * Create Date:2015-1-4 上午10:00:21
 * Modified By:XuMaoSen
 * Modified Time:
 * What is Modified:
 * Version:
 */
@SuppressWarnings("serial")
public class GoodsServlet extends HttpServlet {
	
	private GoodsService goodsService=new GoodsService();
	private CategoryService categoryService=new CategoryService();
	private ImageGoodsService imageGoodsService=new ImageGoodsService();
	private StockService stockService=new StockService();
	/**
	 * 分页实体类
	 */
	private PageBean pageBean=new PageBean();
	

	public void doGet(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		doPost(request, response);
	}

	public void doPost(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		String op=request.getParameter("op");
		if("showlist".equals(op)){
			showGoodsListByPage(request,response);
		}else if ("showinfo".equals(op)) {
			showGoodsInfo(request,response);
		}else if ("goaddnewgoods".equals(op)) {
			goAddNewGoods(request,response);
		}else if ("addnewgoods".equals(op)) {
			addNewGoods(request,response);
		}else if ("search".equals(op)) {
			searchGoods(request,response);
		}else if ("updategoodsinfo".equals(op)) {
			updateGoodsInfo(request,response);
		}else if ("goupdategoodsinfo".equals(op)) {
			goUpdateGoodsInfo(request,response);
		}
	
	}

	/**
	 * @author XuMaoSen
	 * Create Time:2015-1-14 下午4:08:56
	 * Description
	 * @param request
	 * @param response
	 */
	private void updateGoodsInfo(HttpServletRequest request,
			HttpServletResponse response) {
		
	}

	/**
	 * @author XuMaoSen
	 * Create Time:2015-1-13 下午6:59:29
	 * Description
	 * @param request
	 * @param response
	 * @throws IOException 
	 * @throws ServletException 
	 */
	private void goUpdateGoodsInfo(HttpServletRequest request,
			HttpServletResponse response) throws ServletException, IOException {
		//获取要修改的商品的ID
		int goodsId=Integer.parseInt(request.getParameter("goodsId"));
		//得到商品信息
		Goods goods=goodsService.getGoodsInfoByGoodsId(goodsId);
		request.setAttribute("goods", goods);
		//根据商品类别ID查询父级ID
		int root=categoryService.getRootByCateId(goods.getgCid());
		request.setAttribute("root", root);
		//查询所有类别
		List<Category> categoryList=categoryService.getAllCategory();
		request.setAttribute("categoryList", categoryList);		
		request.getRequestDispatcher("/WEB-INF/page/admin/main/updategoodsinfo.jsp").forward(request, response);
	}

	/**
	 * @author XuMaoSen
	 * Create Time:2015-1-12 下午6:57:46
	 * Description
	 * @param request
	 * @param response
	 * @throws IOException 
	 * @throws ServletException 
	 */
	private void goAddNewGoods(HttpServletRequest request,
			HttpServletResponse response) throws ServletException, IOException {
		//查询所有类别
		List<Category> categoryList=categoryService.getAllCategory();
		request.setAttribute("categoryList", categoryList);
		request.getRequestDispatcher("/WEB-INF/page/admin/main/addnewgoods.jsp").forward(request, response);
	}

	/**
	 * @author XuMaoSen
	 * Create Time:2015-1-4 下午1:56:17
	 * Description 模糊查询商品
	 * @param request
	 * @param response
	 * @throws IOException 
	 * @throws ServletException 
	 */
	private void searchGoods(HttpServletRequest request,
			HttpServletResponse response) throws ServletException, IOException {
		//模糊查询商品
		//取得关键字
		String keyWord=request.getParameter("keyWord");
		if(keyWord.equals("")){
			return;
		}
		List<Goods> goodsList=goodsService.getGoodsListByKeyWord(new StringBuffer("%").append(keyWord).append("%").toString(),pageBean.getPage(),pageBean.getRows());
		request.setAttribute("goodsList", goodsList);
		request.getRequestDispatcher("MyJsp.jsp").forward(request, response);
	}

	/**
	 * @author XuMaoSen
	 * Create Time:2015-1-4 上午10:36:18
	 * Description 新增商品
	 * @param request
	 * @param response
	 * @throws IOException 
	 * @throws ServletException 
	 */
	private void addNewGoods(HttpServletRequest request,
			HttpServletResponse response) throws ServletException, IOException {
		Goods goods=new Goods();
		//取得商品名称
		String goodsName=request.getParameter("goodsName");
		//取得商品类别ＩＤ
		int cateId=Integer.parseInt(request.getParameter("smallCate"));
		//取得商品价格
		double price=Double.parseDouble(request.getParameter("price"));
		//取得商品是否允许购买
		Boolean buy=request.getParameter("buy").equals("允许")? true : false;
		//取得商品信息
		String goodsInfo=request.getParameter("goodsInfo");
		//取得商品净重
		int weight=Integer.parseInt(request.getParameter("weight"));
		
		/*int rows=goodsService.addNewGoods(goods);
		if(rows==1){
			//添加成功
			
			request.getRequestDispatcher("/WEB-INF/page/admin/main/goodsimages.jsp").forward(request, response);
		}*/
		request.getRequestDispatcher("/WEB-INF/page/admin/main/goodsimages.jsp").forward(request, response);
	}

	/**
	 * @author XuMaoSen
	 * Create Time:2015-1-4 上午10:14:47
	 * Description 根据商品ID查询商品详情
	 * @param request
	 * @param response
	 * @throws IOException 
	 * @throws ServletException 
	 */
	private void showGoodsInfo(HttpServletRequest request,
			HttpServletResponse response) throws ServletException, IOException {
		try {
			//获取商品ID
			int goodsId=Integer.parseInt(request.getParameter("goodsId"));
			//根据商品ID查询商品详情
			Goods goods=goodsService.getGoodsInfoByGoodsId(goodsId);
			
			Category category=categoryService.getCategoryByCateId(goods.getgCid());
			
			goods.setCate(category);
			
			List<ImageGoods> imageGoods=imageGoodsService.getImageListByGoodsId(goods.getgId());
			goods.setImageGoods(imageGoods);
			request.setAttribute("goods", goods);
			request.getRequestDispatcher("MyJsp.jsp").forward(request, response);
		} catch (NumberFormatException e) {
			e.printStackTrace();
		}
	}

	/**
	 * @author XuMaoSen
	 * Create Time:2015-1-4 上午10:02:23
	 * Description 根据商品类别ID分页查询商品集合
	 * @param request
	 * @param response
	 * @throws IOException 
	 * @throws ServletException 
	 */
	private void showGoodsListByPage(HttpServletRequest request,
			HttpServletResponse response) throws ServletException, IOException {
		try {
			//获取商品类别ID,默认显示外套
			int cateId=10;
			try {
				cateId=Integer.parseInt(request.getParameter("bigCate"));
			} catch (Exception e) {
				
			}
			//根据类别ID查询所有主贴信息
			pageBean.setRows(10);
			pageBean.setPage(1);
			pageBean.setRowsCount(goodsService.getGoodsCount(cateId));
			pageBean.setPagesCount(pageBean.getPagesCount() % pageBean.getRows() == 0 ? pageBean.getPagesCount() / pageBean.getRows() : pageBean.getPagesCount()/ pageBean.getRows() + 1); 
			//翻页操作字符串
			String pageop = request.getParameter("page");
			if (pageop == null) {

			} else if ("firstPage".equals(pageop)) {
				pageBean.setPage(1);
			} else if ("endPage".equals(pageop)) {
				pageBean.setPage(pageBean.getPagesCount());
			} else if ("downPage".equals(pageop)) {
				if (pageBean.getPage() < pageBean.getPagesCount()) {
					pageBean.setPage(pageBean.getPage()+1);
				}
			} else if ("upPage".equals(pageop)) {
				if (pageBean.getPage() > 1) {
					pageBean.setPage(pageBean.getPage()-1);
				}
			} else if ("go".equals(pageop)) {
				int pageNum = Integer.parseInt(request.getParameter("pageNum"));
				if (pageNum > 1 && pageNum < pageBean.getPagesCount()) {
					pageBean.setPage(pageNum);
				}
			}
			//获取全部大类
			List<Category> categoryList=categoryService.getCategoryByRoot(0);
			request.setAttribute("categoryList", categoryList);
			//根据商品类别ID查询商品集合
			List<Goods> goodsList=goodsService.getGoodsListByCateId(cateId,pageBean.getPage(),pageBean.getRows());
			//遍历设置类别和库存
			for (Goods goods : goodsList) {
				Category category=categoryService.getCategoryByCateId(goods.getgCid());
				goods.setCate(category);
				Stock stock=stockService.getStockByGoodsId(goods.getgId());
				goods.setStock(stock);
			}
			request.setAttribute("goodsList", goodsList);
			request.getRequestDispatcher("/WEB-INF/page/admin/main/showgoodslist.jsp").forward(request, response);
		} catch (NumberFormatException e) {
			e.printStackTrace();
		}
	}

}
