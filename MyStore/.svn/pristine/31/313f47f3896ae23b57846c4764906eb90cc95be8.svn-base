/*
 *www.dyr.com
 *Copyright (c) 2014 All Rights Reserved
 */
/**
 * Author XuMaoSen
 */
package com.dyr.dao.service;

import java.util.List;

import org.apache.ibatis.session.SqlSession;

import com.dyr.dao.CategoryDao;
import com.dyr.dao.GoodsDao;
import com.dyr.dao.ImageGoodsDao;
import com.dyr.dao.StockDao;
import com.dyr.entity.Category;
import com.dyr.entity.Goods;
import com.dyr.entity.ImageGoods;
import com.dyr.entity.Stock;
import com.dyr.util.SqlSessionUtil;

/**
 * Project:MyStore
 * Package:com.dyr.dao.service
 * FileName:GoodsService.java
 * Comments:
 * JDK Version:
 * Author XuMaoSen
 * Create Date:2015-1-4 上午9:26:11
 * Modified By:XuMaoSen
 * Modified Time:
 * What is Modified:
 * Version:
 */
public class GoodsService {

	/**
	 * 获取SqlSession
	 */
	private SqlSession sqlSession=SqlSessionUtil.getSqlSession();
	/**
	 * 获取CategoryDao
	 */
	private CategoryDao categoryDao=sqlSession.getMapper(CategoryDao.class);
	/**
	 * 获取GoodsDao
	 */
	private GoodsDao goodsDao=sqlSession.getMapper(GoodsDao.class);
	/**
	 * 获取ImageGoodsDao
	 */
	private ImageGoodsDao imageGoodsDao=sqlSession.getMapper(ImageGoodsDao.class);
	/**
	 * 获取StockDao
	 */
	private StockDao stockDao=sqlSession.getMapper(StockDao.class);
	/**
	 * 增加、删除、修改后执行
	 */
	private void commit(){
		sqlSession.commit();
	}
	/**
	 * 根据类别ID分页查询所有商品
	 */
	public List<Goods> getGoodsListByCateId(int cateId,int page,int rows){
		return goodsDao.selectGoodsListByCateId(cateId,page,rows);
	}
	
	/**
	 * 根据商品ID查询商品详情
	 */
	public Goods getGoodsInfoByGoodsId(int GoodsId){
		return goodsDao.selectGoodsInfoByGoodsId(GoodsId);
	}
	/**
	 * @author XuMaoSen
	 * Create Time:2015-1-4 上午10:48:32
	 * Description
	 * @param goods
	 */
	public int addNewGoods(Goods goods) {
		int rows=goodsDao.insertNewGoods(goods);
		commit();
		return rows;
	}
	/**
	 * @author XuMaoSen
	 * Create Time:2015-1-4 下午2:05:50
	 * Description
	 * @param keyWord
	 * @return
	 */
	public List<Goods> getGoodsListByKeyWord(String keyWord,int page,int rows) {
		
		return goodsDao.selectGoodsListByKeyWord(keyWord,page,rows);
	}
	/**
	 * @author XuMaoSen
	 * Create Time:2015-1-4 下午3:49:55
	 * Description
	 * @param getgCid
	 * @return
	 */
	public Category getCategoryByCateId(int cateId) {
		
		return categoryDao.selectCategoryByCateId(cateId);
	}
	/**
	 * @author XuMaoSen
	 * Create Time:2015-1-4 下午3:59:47
	 * Description
	 * @param getgId
	 * @return
	 */
	public List<ImageGoods> getImageListByGoodsId(int goodsId) {
		
		return imageGoodsDao.selectImageListByGoodsId(goodsId);
	}
	/**
	 * @author XuMaoSen
	 * Create Time:2015-1-5 上午9:45:23
	 * Description 根据类别编号查询该类别下所有商品总数
	 * @param cateId
	 * @return
	 */
	public int getGoodsCount(int cateId) {
		
		return goodsDao.selectGoodsCount(cateId);
	}
	/**
	 * @author XuMaoSen
	 * Create Time:2015-1-13 下午2:04:41
	 * Description
	 * @return
	 */
	public List<Category> getAllCategory() {
		
		return categoryDao.selectAllCategory();
	}
	/**
	 * @author XuMaoSen
	 * Create Time:2015-1-14 上午9:47:33
	 * Description
	 * @param root
	 * @return
	 */
	public List<Category> getCategoryByRoot(int root) {
		
		return categoryDao.selectCategoryByRoot(root);
	}
	/**
	 * @author XuMaoSen
	 * Create Time:2015-1-14 上午11:05:19
	 * Description
	 * @param getgId
	 * @return
	 */
	public Stock getStockByGoodsId(int goodsId) {
		
		return stockDao.selectStockByGoodsId(goodsId);
	}
	
}
